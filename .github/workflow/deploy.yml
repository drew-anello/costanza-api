name: Deploy to EC2

on:
    push:
        branches:
            - master

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        steps:
          - name: Checkout Code
            uses: actions/checkout@v3

          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v3
            with:
              role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
              aws-region: us-east-1

          - name: Log in to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v2

          - name: Build, Tag, and Push Docker Image
            env:
              REPOSITORY_URI: 265842400786.dkr.ecr.us-east-1.amazonaws.com/costanza-fast-api-backend
              IMAGE_TAG: latest
            run: |
              docker build -t $REPOSITORY_URI:$IMAGE_TAG .
              docker push $REPOSITORY_URI:$IMAGE_TAG

    # deploy:
    #     runs-on: ubuntu-latest
    #     needs: build-and-push

    #     steps:
    #         - name: Deploy to EC2
    #             uses: appleboy/ssh-action@v0.1.3
    #             with:
    #                 host: ${{ secrets.EC2_HOST }}
    #                 username: ${{ secrets.EC2_USER }}
    #                 key: ${{ secrets.EC2_SSH_KEY }}
    #                 script: |
    #                     IMAGE_TAG=latest
    #                     aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
    #                     docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
    #                     docker stop my-app || true
    #                     docker rm my-app || true
    #                     docker run -d --name my-app -p 80:80 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG